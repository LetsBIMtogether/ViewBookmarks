<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<UseWPF>true</UseWPF>
	</PropertyGroup>

	<PropertyGroup>
		<Configurations>Debug;Debug One;Release</Configurations>
	</PropertyGroup>

	<PropertyGroup>
		<!-- 
              2014  |  net40
              2015  |  net45
              2016  |  net451
              2017  |  net452
              2018  |  net46
              2019  |  net47
              2020  |  net471
              2021  |  net48
              2022  |  net48
              2023  |  net48
              2024  |  net48
              2025  |  net8.0-windows
              2026  |  net8.0-windows
		-->
		<TargetFrameworks>net47;net48;net8.0-windows</TargetFrameworks>
		<!-- net47;net48;net8.0-windows -->
		<RuntimeIdentifiers>win</RuntimeIdentifiers>
		<RevitVersion Condition=" '$(RevitVersion)' == '' ">2024</RevitVersion>
	</PropertyGroup>
	<!-- Have to use min 2024 as default b/c of 'ElementId' does not contain a definition for 'Value' . . . -->


	<!-- DEFAULT:
                        2019, 2024, 2025
	-->
	<!-- POST DISPATCH:
	                    2020; 2021, 2022, 2023, 2026
	-->
	

	<PropertyGroup Condition=" '$(TargetFramework)' == 'net47' ">
		<RevitVersion>2019</RevitVersion>
	</PropertyGroup>
	
	<PropertyGroup Condition=" '$(TargetFramework)' == 'net8.0-windows' ">
		<RevitVersion>2025</RevitVersion>
	</PropertyGroup>
	

	<PropertyGroup Condition="'$(Configuration)' == 'Debug One'">
		<TargetFrameworks>net48</TargetFrameworks>
	</PropertyGroup>


	<PropertyGroup>
    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>

    <!-- Invert the behavior of new .csproj format - exclude files by default -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <EnableDefaultItems>false</EnableDefaultItems>

    <!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
    e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
    <DefineConstants>REVIT$(RevitVersion);WINFORMS</DefineConstants>
    <PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>

    <!-- Override 'OutputPath' to Debug/Release + Revit version -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>..\bin\$(Configuration)\$(RevitVersion)</OutputPath>
  </PropertyGroup>
	
	
	<!--
	____EXAMPLE____
	#if REVIT2025UP
	    TaskDialog.Show("what","This is Revit 2025 or higher! (Out of this build)");
	#else
	    TaskDialog.Show("what","Using Revit 2024 or lower (Out of this build)");
	#endif
	-->

	<!--We can define our custom preprocessor constants to simplify our project code-->
	<PropertyGroup Condition="'$(RevitVersion)' != '2017' AND '$(RevitVersion)' != '2018' AND '$(RevitVersion)' != '2019' AND '$(RevitVersion)' != '2020' AND '$(RevitVersion)' != '2021' AND '$(RevitVersion)' != '2022' AND '$(RevitVersion)' != '2023'">
		<DefineConstants>$(DefineConstants);REVIT2024UP</DefineConstants>
		<PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>
	</PropertyGroup>
	
	
	<PropertyGroup Condition="$(Configuration.Contains('Debug'))">
		<DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
		<DebugType>full</DebugType>
		<OutputPath>..\bin\Debug\$(RevitVersion)</OutputPath>
	</PropertyGroup>


	<ItemGroup Condition="'$(TargetFramework)' == 'net46' or '$(TargetFramework)' == 'net47' or '$(TargetFramework)' == 'net48'">
		<Reference Include="PresentationCore" />
		<Reference Include="PresentationFramework" />
		<Reference Include="WindowsBase" />
	</ItemGroup>

	<ItemGroup Condition="$(DefineConstants.Contains('WINFORMS')) and ('$TargetFramework' == 'net46' or '$TargetFramework' == 'net47' or '$TargetFramework' == 'net48')">
		<Reference Include="System.Windows.Forms" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows'">
		<FrameworkReference Include="Microsoft.WindowsDesktop.App" />
		<PackageReference Include="System.Drawing.Common">
			<Version>8.0.3</Version>
		</PackageReference>
		<PackageReference Include="System.Net.Http" Version="4.3.4" />
	</ItemGroup>


	<ItemGroup>
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2017.*" Condition=" '$(RevitVersion)' == '2017' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2018.*" Condition=" '$(RevitVersion)' == '2018' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2019.*" Condition=" '$(RevitVersion)' == '2019' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2020.*" Condition=" '$(RevitVersion)' == '2020' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2021.*" Condition=" '$(RevitVersion)' == '2021' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2022.*" Condition=" '$(RevitVersion)' == '2022' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2023.*" Condition=" '$(RevitVersion)' == '2023' " PrivateAssets="All" />
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2024.*" Condition=" '$(RevitVersion)' == '2024' " PrivateAssets="All" />
	</ItemGroup>


	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-windows' ">
		<PackageReference Include="Revit_All_Main_Versions_API_x64" Version="2025.*" Condition=" '$(RevitVersion)' == '2025' " PrivateAssets="All" />

		<PackageReference Include="Nice3point.Revit.Api.RevitAPI" Version="2026.*" Condition=" '$(RevitVersion)' == '2026' " PrivateAssets="All" />
		<PackageReference Include="Nice3point.Revit.Api.RevitAPIUI" Version="2026.*" Condition=" '$(RevitVersion)' == '2026' " PrivateAssets="All" />
		<PackageReference Include="Nice3point.Revit.Api.AdWindows" Version="2026.*" Condition=" '$(RevitVersion)' == '2026' " PrivateAssets="All" />
	</ItemGroup>


	<Target Name="PreventRevitSDKCopyLocal" AfterTargets="ResolveReferences">
		<ItemGroup>
			<!-- A temporary fix for Revit SDK files being copied to the output folder -->
			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="'%(ReferenceCopyLocalPaths.NuGetPackageId)' == 'Revit_All_Main_Versions_API_x64'" />
		</ItemGroup>
	</Target>
	
	
	<ItemGroup>
		<Resource Include="Images\about-office-m-32.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\bookmark-ui-16.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\bookmark-ui-32.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\bookmark-ui-96.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\export-32.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\import-32.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\LED-gray.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\LED-green.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\LED-red.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\LED-yellow.png">
		  <CopyToOutputDirectory></CopyToOutputDirectory>
		</Resource>
		<Resource Include="Images\bookmark-ui-32.ico" />
		<Resource Include="Images\refresh-32.png" />
		
		<!-- Add-in manifest is processed via MSBuild -->
		<Content Include="Manifests/AddinTemplate.addin">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Content>

		<!-- Not using this :) -->
		<EmbeddedResource Include="Resources\**\*.*">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>

		<Compile Include="AboutWindow.xaml.cs" />
		<Compile Include="AGdialogWindow.xaml.cs" />
		<Compile Include="AGdialog.cs" />
		<Compile Include="AGdialogWindowYesNo.xaml.cs" />
		<Compile Include="App.cs" />
		<Compile Include="AG.cs" />
		<Compile Include="Command.cs" />
		<Compile Include="LEDControl.xaml.cs" />
		<Compile Include="myWPF.xaml.cs" />
		<Content Include="Properties\launchSettings.json">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</Content>
  </ItemGroup>
	
	<ItemGroup>
	  <Page Include="AboutWindow.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </Page>
	  <Page Include="AGdialogWindow.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </Page>
	  <Page Include="AGdialogWindowYesNo.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </Page>
	  <Page Include="LEDControl.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </Page>
	  <Page Include="myWPF.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </Page>
	</ItemGroup>

	
	<PropertyGroup>
		<RootNamespace>AG_View_Bookmarks</RootNamespace>
		<AssemblyName>AG_View_Bookmarks</AssemblyName>

		<Authors>Arthur Ganem</Authors>
		<PackageId>com.LetsBIMtogether</PackageId>
		<Company>Lets BIM Together</Company>
		<PackageProjectUrl>wwww.LetsBIMtogether.com</PackageProjectUrl>
		<Product>$(RootNamespace)</Product>
		<Version>1.0.0</Version>
		<NeutralLanguage>en</NeutralLanguage>
	</PropertyGroup>

	
  <Target Name="CreateAddinManifest" AfterTargets="AfterBuild">
    <ItemGroup>
      <AddinManifest Include="$(OutputPath)\$(AssemblyName).addin" />
    </ItemGroup>
    <ReplaceFileText InputFilename="Manifests/AddinTemplate.addin" OutputFilename="@(AddinManifest)" MatchExpression="VendorDescription&gt;(.*?)&lt;" ReplacementText="VendorDescription&gt;$(Authors), $(Company), $(PackageProjectUrl)&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="FullClassName&gt;((.*?)\.)+" ReplacementText="FullClassName&gt;$(RootNamespace)." />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;Name&gt;(.*?)&lt;" ReplacementText="&lt;Name&gt;$(Product)&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
    <ReplaceFileText Condition="'$(Configuration)' == 'Release'" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(AssemblyName).dll&lt;" />
    <ReplaceFileText Condition="$(Configuration.Contains('Debug'))" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$([System.IO.Path]::GetFullPath('$(OutputPath)'))$(AssemblyName).dll&lt;" />
  </Target>

  <UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask>

	
  <Target Name="CopyAddinsToAppData" AfterTargets="CreateAddinManifest" Condition="$(Configuration.Contains('Debug'))">
    <!-- Copy newly compiled add-in files to AppData folder (before starting the debugger) -->
    <Message Importance="high" Text="Copying addin file into Revit Addin folder" />
    <ItemGroup>
      <AddinFiles Include="$(OutputPath)\..\**\*.addin" />
    </ItemGroup>
    <Copy SourceFiles="@(AddinFiles)" DestinationFolder="$(AppData)\Autodesk\Revit\Addins\%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
  </Target>

  <Target Name="CleanAddinsInAppData" AfterTargets="AfterClean">
    <!-- Delete previously deployed to AppData folder add-in files -->
    <ItemGroup>
      <AddinFiles Include="$(AppData)\Autodesk\Revit\Addins\**\$(AssemblyName).*" />
    </ItemGroup>
    <Delete Files="@(AddinFiles)" />
  </Target>


	<Target Name="Build2020" AfterTargets="DispatchToInnerBuilds">
		<Message Importance="high" Text="*** running post-dispatch builds ***" />
		<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration); TargetFramework=net47; RevitVersion=2020"></MSBuild>
	</Target>

	<Target Name="Build2021" AfterTargets="DispatchToInnerBuilds">
		<Message Importance="high" Text="*** running post-dispatch builds ***" />
		<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration); TargetFramework=net48; RevitVersion=2021"></MSBuild>
	</Target>

	<Target Name="Build2022" AfterTargets="DispatchToInnerBuilds">
		<Message Importance="high" Text="*** running post-dispatch builds ***" />
		<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration); TargetFramework=net48; RevitVersion=2022"></MSBuild>
	</Target>

	<Target Name="Build2023" AfterTargets="DispatchToInnerBuilds">
		<Message Importance="high" Text="*** running post-dispatch builds ***" />
		<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration); TargetFramework=net48; RevitVersion=2023"></MSBuild>
	</Target>

	<Target Name="Build2026" AfterTargets="DispatchToInnerBuilds">
		<Message Importance="high" Text="*** running post-dispatch builds ***" />
		<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration); TargetFramework=net8.0-windows; RevitVersion=2026"></MSBuild>
	</Target>


	<Target Name="RemoveRevit2025DepsJsonFile" AfterTargets="AfterBuild" Condition="'$(RevitVersion)' == '2025'">
		<ItemGroup>
			<DepsJsonFile Include="$(OutputPath)\$(AssemblyName).deps.json" />
		</ItemGroup>

		<!-- Delete the .deps.json file from the output directory -->
		<Delete Files="@(DepsJsonFile)" />
	</Target>

	<Target Name="RemoveRevit2026DepsJsonFile" AfterTargets="AfterBuild" Condition="'$(RevitVersion)' == '2026'">
		<ItemGroup>
			<DepsJsonFile Include="$(OutputPath)\$(AssemblyName).deps.json" />
		</ItemGroup>

		<!-- Delete the .deps.json file from the output directory -->
		<Delete Files="@(DepsJsonFile)" />
	</Target>

</Project>
